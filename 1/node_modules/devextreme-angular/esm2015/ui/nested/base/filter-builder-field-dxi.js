/*!
 * devextreme-angular
 * Version: 21.2.1-alpha-21212-0323
 * Build date: Sat Jul 31 2021
 *
 * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { CollectionNestedOption } from 'devextreme-angular/core';
export class DxiFilterBuilderField extends CollectionNestedOption {
    get calculateFilterExpression() {
        return this._getOption('calculateFilterExpression');
    }
    set calculateFilterExpression(value) {
        this._setOption('calculateFilterExpression', value);
    }
    get caption() {
        return this._getOption('caption');
    }
    set caption(value) {
        this._setOption('caption', value);
    }
    get customizeText() {
        return this._getOption('customizeText');
    }
    set customizeText(value) {
        this._setOption('customizeText', value);
    }
    get dataField() {
        return this._getOption('dataField');
    }
    set dataField(value) {
        this._setOption('dataField', value);
    }
    get dataType() {
        return this._getOption('dataType');
    }
    set dataType(value) {
        this._setOption('dataType', value);
    }
    get editorOptions() {
        return this._getOption('editorOptions');
    }
    set editorOptions(value) {
        this._setOption('editorOptions', value);
    }
    get editorTemplate() {
        return this._getOption('editorTemplate');
    }
    set editorTemplate(value) {
        this._setOption('editorTemplate', value);
    }
    get falseText() {
        return this._getOption('falseText');
    }
    set falseText(value) {
        this._setOption('falseText', value);
    }
    get filterOperations() {
        return this._getOption('filterOperations');
    }
    set filterOperations(value) {
        this._setOption('filterOperations', value);
    }
    get format() {
        return this._getOption('format');
    }
    set format(value) {
        this._setOption('format', value);
    }
    get lookup() {
        return this._getOption('lookup');
    }
    set lookup(value) {
        this._setOption('lookup', value);
    }
    get name() {
        return this._getOption('name');
    }
    set name(value) {
        this._setOption('name', value);
    }
    get trueText() {
        return this._getOption('trueText');
    }
    set trueText(value) {
        this._setOption('trueText', value);
    }
    get allowCrossGroupCalculation() {
        return this._getOption('allowCrossGroupCalculation');
    }
    set allowCrossGroupCalculation(value) {
        this._setOption('allowCrossGroupCalculation', value);
    }
    get allowExpandAll() {
        return this._getOption('allowExpandAll');
    }
    set allowExpandAll(value) {
        this._setOption('allowExpandAll', value);
    }
    get allowFiltering() {
        return this._getOption('allowFiltering');
    }
    set allowFiltering(value) {
        this._setOption('allowFiltering', value);
    }
    get allowSorting() {
        return this._getOption('allowSorting');
    }
    set allowSorting(value) {
        this._setOption('allowSorting', value);
    }
    get allowSortingBySummary() {
        return this._getOption('allowSortingBySummary');
    }
    set allowSortingBySummary(value) {
        this._setOption('allowSortingBySummary', value);
    }
    get area() {
        return this._getOption('area');
    }
    set area(value) {
        this._setOption('area', value);
    }
    get areaIndex() {
        return this._getOption('areaIndex');
    }
    set areaIndex(value) {
        this._setOption('areaIndex', value);
    }
    get calculateCustomSummary() {
        return this._getOption('calculateCustomSummary');
    }
    set calculateCustomSummary(value) {
        this._setOption('calculateCustomSummary', value);
    }
    get calculateSummaryValue() {
        return this._getOption('calculateSummaryValue');
    }
    set calculateSummaryValue(value) {
        this._setOption('calculateSummaryValue', value);
    }
    get displayFolder() {
        return this._getOption('displayFolder');
    }
    set displayFolder(value) {
        this._setOption('displayFolder', value);
    }
    get expanded() {
        return this._getOption('expanded');
    }
    set expanded(value) {
        this._setOption('expanded', value);
    }
    get filterType() {
        return this._getOption('filterType');
    }
    set filterType(value) {
        this._setOption('filterType', value);
    }
    get filterValues() {
        return this._getOption('filterValues');
    }
    set filterValues(value) {
        this._setOption('filterValues', value);
    }
    get groupIndex() {
        return this._getOption('groupIndex');
    }
    set groupIndex(value) {
        this._setOption('groupIndex', value);
    }
    get groupInterval() {
        return this._getOption('groupInterval');
    }
    set groupInterval(value) {
        this._setOption('groupInterval', value);
    }
    get groupName() {
        return this._getOption('groupName');
    }
    set groupName(value) {
        this._setOption('groupName', value);
    }
    get headerFilter() {
        return this._getOption('headerFilter');
    }
    set headerFilter(value) {
        this._setOption('headerFilter', value);
    }
    get isMeasure() {
        return this._getOption('isMeasure');
    }
    set isMeasure(value) {
        this._setOption('isMeasure', value);
    }
    get precision() {
        return this._getOption('precision');
    }
    set precision(value) {
        this._setOption('precision', value);
    }
    get runningTotal() {
        return this._getOption('runningTotal');
    }
    set runningTotal(value) {
        this._setOption('runningTotal', value);
    }
    get selector() {
        return this._getOption('selector');
    }
    set selector(value) {
        this._setOption('selector', value);
    }
    get showGrandTotals() {
        return this._getOption('showGrandTotals');
    }
    set showGrandTotals(value) {
        this._setOption('showGrandTotals', value);
    }
    get showTotals() {
        return this._getOption('showTotals');
    }
    set showTotals(value) {
        this._setOption('showTotals', value);
    }
    get showValues() {
        return this._getOption('showValues');
    }
    set showValues(value) {
        this._setOption('showValues', value);
    }
    get sortBy() {
        return this._getOption('sortBy');
    }
    set sortBy(value) {
        this._setOption('sortBy', value);
    }
    get sortBySummaryField() {
        return this._getOption('sortBySummaryField');
    }
    set sortBySummaryField(value) {
        this._setOption('sortBySummaryField', value);
    }
    get sortBySummaryPath() {
        return this._getOption('sortBySummaryPath');
    }
    set sortBySummaryPath(value) {
        this._setOption('sortBySummaryPath', value);
    }
    get sortingMethod() {
        return this._getOption('sortingMethod');
    }
    set sortingMethod(value) {
        this._setOption('sortingMethod', value);
    }
    get sortOrder() {
        return this._getOption('sortOrder');
    }
    set sortOrder(value) {
        this._setOption('sortOrder', value);
    }
    get summaryDisplayMode() {
        return this._getOption('summaryDisplayMode');
    }
    set summaryDisplayMode(value) {
        this._setOption('summaryDisplayMode', value);
    }
    get summaryType() {
        return this._getOption('summaryType');
    }
    set summaryType(value) {
        this._setOption('summaryType', value);
    }
    get visible() {
        return this._getOption('visible');
    }
    set visible(value) {
        this._setOption('visible', value);
    }
    get width() {
        return this._getOption('width');
    }
    set width(value) {
        this._setOption('width', value);
    }
    get wordWrapEnabled() {
        return this._getOption('wordWrapEnabled');
    }
    set wordWrapEnabled(value) {
        this._setOption('wordWrapEnabled', value);
    }
}
//# sourceMappingURL=data:application/json;base64,