{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://devextreme-angular/ui/chart/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","DxChartComponent","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","_this","_super","call","this","_createEventEmitters","subscribe","emit","setHost","paramIndex","decorator","__","constructor","prototype","create","tslib_1.__extends","_getOption","value","_setOption","setChildren","_createInstance","element","options","DxChart","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","name","isSetup","setupSingle","isChanged","getChanges","ElementRef","NgZone","DxTemplateHost","WatcherHelper","IterableDifferHelper","NestedOptionHost","TransferState","Inject","args","PLATFORM_ID","tslib_1.__decorate","Input","Function","Output","EventEmitter","ContentChildren","DxiAnnotationComponent","QueryList","DxiPaneComponent","DxiSeriesComponent","DxiValueAxisComponent","Component","selector","template","providers","tslib_1.__param","DxComponent","DxChartModule","NgModule","imports","DxoAdaptiveLayoutModule","DxoAnimationModule","DxiAnnotationModule","DxoBorderModule","DxoFontModule","DxoImageModule","DxoShadowModule","DxoArgumentAxisModule","DxoAggregationIntervalModule","DxiBreakModule","DxoBreakStyleModule","DxiConstantLineModule","DxoLabelModule","DxoConstantLineStyleModule","DxoGridModule","DxoFormatModule","DxoMinorGridModule","DxoMinorTickModule","DxoMinorTickIntervalModule","DxoMinVisualRangeLengthModule","DxiStripModule","DxoStripStyleModule","DxoTickModule","DxoTickIntervalModule","DxoTitleModule","DxoCommonAnnotationSettingsModule","DxoCommonAxisSettingsModule","DxoCommonPaneSettingsModule","DxoCommonSeriesSettingsModule","DxoAggregationModule","DxoAreaModule","DxoHoverStyleModule","DxoHatchingModule","DxoConnectorModule","DxoPointModule","DxoHeightModule","DxoUrlModule","DxoWidthModule","DxoSelectionStyleModule","DxoReductionModule","DxoValueErrorBarModule","DxoBarModule","DxoBubbleModule","DxoCandlestickModule","DxoFullstackedareaModule","DxoFullstackedbarModule","DxoFullstackedlineModule","DxoFullstackedsplineModule","DxoFullstackedsplineareaModule","DxoArgumentFormatModule","DxoLineModule","DxoRangeareaModule","DxoRangebarModule","DxoScatterModule","DxoSplineModule","DxoSplineareaModule","DxoStackedareaModule","DxoStackedbarModule","DxoStackedlineModule","DxoStackedsplineModule","DxoStackedsplineareaModule","DxoStepareaModule","DxoSteplineModule","DxoStockModule","DxoCrosshairModule","DxoHorizontalLineModule","DxoVerticalLineModule","DxoDataPrepareSettingsModule","DxoExportModule","DxoLegendModule","DxoMarginModule","DxoSubtitleModule","DxoLoadingIndicatorModule","DxiPaneModule","DxoScrollBarModule","DxiSeriesModule","DxoSeriesTemplateModule","DxoSizeModule","DxoTooltipModule","DxiValueAxisModule","DxoZoomAndPanModule","DxoDragBoxStyleModule","DxIntegrationModule","DxTemplateModule","BrowserTransferStateModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!\n * devextreme-angular\n * Version: 21.2.1-alpha-21212-0323\n * Build date: Sat Jul 31 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport { UserDefinedElement } from 'devextreme/core/element';\r\nimport { dxChartCommonAnnotationConfig } from 'devextreme/viz/chart';\r\nimport { Font } from 'devextreme/viz/core/base_widget';\r\n\r\nimport DxChart from 'devextreme/viz/chart';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoAdaptiveLayoutModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAnimationModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiAnnotationModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBorderModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFontModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoImageModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoShadowModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoArgumentAxisModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAggregationIntervalModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiBreakModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBreakStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiConstantLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLabelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoConstantLineStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoGridModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorGridModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorTickModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorTickIntervalModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinVisualRangeLengthModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiStripModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStripStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTickModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTickIntervalModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonAnnotationSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonAxisSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonPaneSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonSeriesSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAggregationModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAreaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHoverStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHatchingModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoConnectorModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPointModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHeightModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoUrlModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoWidthModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSelectionStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoReductionModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoValueErrorBarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBubbleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCandlestickModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFullstackedareaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFullstackedbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFullstackedlineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFullstackedsplineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFullstackedsplineareaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoArgumentFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoRangeareaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoRangebarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScatterModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSplineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSplineareaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStackedareaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStackedbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStackedlineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStackedsplineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStackedsplineareaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStepareaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSteplineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStockModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCrosshairModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHorizontalLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoVerticalLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoDataPrepareSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLegendModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMarginModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSubtitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadingIndicatorModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiPaneModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScrollBarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiSeriesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSeriesTemplateModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTooltipModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiValueAxisModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoZoomAndPanModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoDragBoxStyleModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiAnnotationComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiPaneComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiSeriesComponent } from 'devextreme-angular/ui/nested';\r\nimport { DxiValueAxisComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n/**\r\n * The Chart is a UI component that visualizes data from a local or remote storage using a great variety of series types along with different interactive elements, such as tooltips, crosshair pointer, legend, etc.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-chart',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxChartComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxChart;\r\n\r\n    /**\r\n     * Specifies adaptive layout properties.\r\n    \r\n     */\r\n    @Input()\r\n    get adaptiveLayout(): { height?: number, keepLabels?: boolean, width?: number } {\r\n        return this._getOption('adaptiveLayout');\r\n    }\r\n    set adaptiveLayout(value: { height?: number, keepLabels?: boolean, width?: number }) {\r\n        this._setOption('adaptiveLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to adjust the value axis&apos;s visualRange when the argument axis is being zoomed or panned.\r\n    \r\n     */\r\n    @Input()\r\n    get adjustOnZoom(): boolean {\r\n        return this._getOption('adjustOnZoom');\r\n    }\r\n    set adjustOnZoom(value: boolean) {\r\n        this._setOption('adjustOnZoom', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies animation properties.\r\n    \r\n     */\r\n    @Input()\r\n    get animation(): boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number } {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value: boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }) {\r\n        this._setOption('animation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the annotation collection.\r\n    \r\n     */\r\n    @Input()\r\n    get annotations(): Array<DevExpress.viz.dxChartAnnotationConfig | any> {\r\n        return this._getOption('annotations');\r\n    }\r\n    set annotations(value: Array<DevExpress.viz.dxChartAnnotationConfig | any>) {\r\n        this._setOption('annotations', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the argument axis.\r\n    \r\n     */\r\n    @Input()\r\n    get argumentAxis(): { aggregateByCategory?: boolean, aggregationGroupWidth?: number, aggregationInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, customPosition?: Date | number | string, customPositionAxis?: string, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, holidays?: Array<Date | string | number>, hoverMode?: string, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: Font, format?: DevExpress.ui.Format | string, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, linearThreshold?: number, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, offset?: number, opacity?: number, placeholderSize?: number, position?: string, singleWorkdays?: Array<Date | string | number>, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number, workdaysOnly?: boolean, workWeek?: Array<number> } {\r\n        return this._getOption('argumentAxis');\r\n    }\r\n    set argumentAxis(value: { aggregateByCategory?: boolean, aggregationGroupWidth?: number, aggregationInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, customPosition?: Date | number | string, customPositionAxis?: string, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, holidays?: Array<Date | string | number>, hoverMode?: string, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: Font, format?: DevExpress.ui.Format | string, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, linearThreshold?: number, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, offset?: number, opacity?: number, placeholderSize?: number, position?: string, singleWorkdays?: Array<Date | string | number>, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number, workdaysOnly?: boolean, workWeek?: Array<number> }) {\r\n        this._setOption('argumentAxis', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to hide series point markers automatically to reduce visual clutter.\r\n    \r\n     */\r\n    @Input()\r\n    get autoHidePointMarkers(): boolean {\r\n        return this._getOption('autoHidePointMarkers');\r\n    }\r\n    set autoHidePointMarkers(value: boolean) {\r\n        this._setOption('autoHidePointMarkers', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Controls the padding and consequently the width of a group of bars with the same argument using relative units. Ignored if the barGroupWidth property is set.\r\n    \r\n     */\r\n    @Input()\r\n    get barGroupPadding(): number {\r\n        return this._getOption('barGroupPadding');\r\n    }\r\n    set barGroupPadding(value: number) {\r\n        this._setOption('barGroupPadding', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a fixed width for groups of bars with the same argument, measured in pixels. Takes precedence over the barGroupPadding property.\r\n    \r\n     */\r\n    @Input()\r\n    get barGroupWidth(): number {\r\n        return this._getOption('barGroupWidth');\r\n    }\r\n    set barGroupWidth(value: number) {\r\n        this._setOption('barGroupWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies settings common for all annotations in the chart.\r\n    \r\n     */\r\n    @Input()\r\n    get commonAnnotationSettings(): dxChartCommonAnnotationConfig {\r\n        return this._getOption('commonAnnotationSettings');\r\n    }\r\n    set commonAnnotationSettings(value: dxChartCommonAnnotationConfig) {\r\n        this._setOption('commonAnnotationSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines common settings for both the argument and value axis in a chart.\r\n    \r\n     */\r\n    @Input()\r\n    get commonAxisSettings(): { allowDecimals?: boolean, breakStyle?: { color?: string, line?: string, width?: number }, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, position?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, displayMode?: string, font?: Font, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minValueMargin?: number, opacity?: number, placeholderSize?: number, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, title?: { alignment?: string, font?: Font, margin?: number, textOverflow?: string, wordWrap?: string }, valueMarginsEnabled?: boolean, visible?: boolean, width?: number } {\r\n        return this._getOption('commonAxisSettings');\r\n    }\r\n    set commonAxisSettings(value: { allowDecimals?: boolean, breakStyle?: { color?: string, line?: string, width?: number }, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, position?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, displayMode?: string, font?: Font, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minValueMargin?: number, opacity?: number, placeholderSize?: number, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, title?: { alignment?: string, font?: Font, margin?: number, textOverflow?: string, wordWrap?: string }, valueMarginsEnabled?: boolean, visible?: boolean, width?: number }) {\r\n        this._setOption('commonAxisSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines common settings for all panes in a chart.\r\n    \r\n     */\r\n    @Input()\r\n    get commonPaneSettings(): { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number } } {\r\n        return this._getOption('commonPaneSettings');\r\n    }\r\n    set commonPaneSettings(value: { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number } }) {\r\n        this._setOption('commonPaneSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies settings common for all series in the chart.\r\n    \r\n     */\r\n    @Input()\r\n    get commonSeriesSettings(): any {\r\n        return this._getOption('commonSeriesSettings');\r\n    }\r\n    set commonSeriesSettings(value: any) {\r\n        this._setOption('commonSeriesSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Colors the background of the chart container.\r\n    \r\n     */\r\n    @Input()\r\n    get containerBackgroundColor(): string {\r\n        return this._getOption('containerBackgroundColor');\r\n    }\r\n    set containerBackgroundColor(value: string) {\r\n        this._setOption('containerBackgroundColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the crosshair feature.\r\n    \r\n     */\r\n    @Input()\r\n    get crosshair(): { color?: string, dashStyle?: string, enabled?: boolean, horizontalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, verticalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, width?: number } {\r\n        return this._getOption('crosshair');\r\n    }\r\n    set crosshair(value: { color?: string, dashStyle?: string, enabled?: boolean, horizontalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, verticalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, width?: number }) {\r\n        this._setOption('crosshair', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes an individual annotation.\r\n    \r\n     */\r\n    @Input()\r\n    get customizeAnnotation(): Function {\r\n        return this._getOption('customizeAnnotation');\r\n    }\r\n    set customizeAnnotation(value: Function) {\r\n        this._setOption('customizeAnnotation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual point label.\r\n    \r\n     */\r\n    @Input()\r\n    get customizeLabel(): Function {\r\n        return this._getOption('customizeLabel');\r\n    }\r\n    set customizeLabel(value: Function) {\r\n        this._setOption('customizeLabel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual series point.\r\n    \r\n     */\r\n    @Input()\r\n    get customizePoint(): Function {\r\n        return this._getOption('customizePoint');\r\n    }\r\n    set customizePoint(value: Function) {\r\n        this._setOption('customizePoint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Processes data before visualizing it.\r\n    \r\n     */\r\n    @Input()\r\n    get dataPrepareSettings(): { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function } {\r\n        return this._getOption('dataPrepareSettings');\r\n    }\r\n    set dataPrepareSettings(value: { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }) {\r\n        this._setOption('dataPrepareSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the UI component to data.\r\n    \r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | DevExpress.data.Store | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | DevExpress.data.Store | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which pane should be used by default.\r\n    \r\n     */\r\n    @Input()\r\n    get defaultPane(): string {\r\n        return this._getOption('defaultPane');\r\n    }\r\n    set defaultPane(value: string) {\r\n        this._setOption('defaultPane', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the exporting and printing features.\r\n    \r\n     */\r\n    @Input()\r\n    get export(): { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the properties of a chart&apos;s legend.\r\n    \r\n     */\r\n    @Input()\r\n    get legend(): { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, position?: string, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean } {\r\n        return this._getOption('legend');\r\n    }\r\n    set legend(value: { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, position?: string, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }) {\r\n        this._setOption('legend', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the loading indicator.\r\n    \r\n     */\r\n    @Input()\r\n    get loadingIndicator(): { backgroundColor?: string, enabled?: boolean, font?: Font, show?: boolean, text?: string } {\r\n        return this._getOption('loadingIndicator');\r\n    }\r\n    set loadingIndicator(value: { backgroundColor?: string, enabled?: boolean, font?: Font, show?: boolean, text?: string }) {\r\n        this._setOption('loadingIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates space around the UI component.\r\n    \r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a coefficient determining the diameter of the largest bubble.\r\n    \r\n     */\r\n    @Input()\r\n    get maxBubbleSize(): number {\r\n        return this._getOption('maxBubbleSize');\r\n    }\r\n    set maxBubbleSize(value: number) {\r\n        this._setOption('maxBubbleSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the diameter of the smallest bubble measured in pixels.\r\n    \r\n     */\r\n    @Input()\r\n    get minBubbleSize(): number {\r\n        return this._getOption('minBubbleSize');\r\n    }\r\n    set minBubbleSize(value: number) {\r\n        this._setOption('minBubbleSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Forces the UI component to treat negative values as zeroes. Applies to stacked-like series only.\r\n    \r\n     */\r\n    @Input()\r\n    get negativesAsZeroes(): boolean {\r\n        return this._getOption('negativesAsZeroes');\r\n    }\r\n    set negativesAsZeroes(value: boolean) {\r\n        this._setOption('negativesAsZeroes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the palette to be used for colorizing series and their elements.\r\n    \r\n     */\r\n    @Input()\r\n    get palette(): string | Array<string> {\r\n        return this._getOption('palette');\r\n    }\r\n    set palette(value: string | Array<string>) {\r\n        this._setOption('palette', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies what to do with colors in the palette when their number is less than the number of series (in the Chart UI component) or points in a series (in the PieChart UI component).\r\n    \r\n     */\r\n    @Input()\r\n    get paletteExtensionMode(): string {\r\n        return this._getOption('paletteExtensionMode');\r\n    }\r\n    set paletteExtensionMode(value: string) {\r\n        this._setOption('paletteExtensionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Declares a collection of panes.\r\n    \r\n     */\r\n    @Input()\r\n    get panes(): Array<any | { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number }, height?: number | string, name?: string }> {\r\n        return this._getOption('panes');\r\n    }\r\n    set panes(value: Array<any | { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number }, height?: number | string, name?: string }>) {\r\n        this._setOption('panes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the UI component that it is embedded into an HTML page that uses a tag modifying the path.\r\n    \r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single point or multiple points can be selected in the chart.\r\n    \r\n     */\r\n    @Input()\r\n    get pointSelectionMode(): string {\r\n        return this._getOption('pointSelectionMode');\r\n    }\r\n    set pointSelectionMode(value: string) {\r\n        this._setOption('pointSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to redraw the UI component when the size of the parent browser window changes or a mobile device rotates.\r\n    \r\n     */\r\n    @Input()\r\n    get redrawOnResize(): boolean {\r\n        return this._getOption('redrawOnResize');\r\n    }\r\n    set redrawOnResize(value: boolean) {\r\n        this._setOption('redrawOnResize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether panes can be resized if other chart elements require more space after zooming or panning.\r\n    \r\n     */\r\n    @Input()\r\n    get resizePanesOnZoom(): boolean {\r\n        return this._getOption('resizePanesOnZoom');\r\n    }\r\n    set resizePanesOnZoom(value: boolean) {\r\n        this._setOption('resizePanesOnZoom', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the chart must behave when series point labels overlap.\r\n    \r\n     */\r\n    @Input()\r\n    get resolveLabelOverlapping(): string {\r\n        return this._getOption('resolveLabelOverlapping');\r\n    }\r\n    set resolveLabelOverlapping(value: string) {\r\n        this._setOption('resolveLabelOverlapping', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Swaps the axes around making the value axis horizontal and the argument axis vertical.\r\n    \r\n     */\r\n    @Input()\r\n    get rotated(): boolean {\r\n        return this._getOption('rotated');\r\n    }\r\n    set rotated(value: boolean) {\r\n        this._setOption('rotated', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the settings of the scroll bar.\r\n    \r\n     */\r\n    @Input()\r\n    get scrollBar(): { color?: string, offset?: number, opacity?: number, position?: string, visible?: boolean, width?: number } {\r\n        return this._getOption('scrollBar');\r\n    }\r\n    set scrollBar(value: { color?: string, offset?: number, opacity?: number, position?: string, visible?: boolean, width?: number }) {\r\n        this._setOption('scrollBar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies properties for Chart UI component series.\r\n    \r\n     */\r\n    @Input()\r\n    get series(): any | Array<any> {\r\n        return this._getOption('series');\r\n    }\r\n    set series(value: any | Array<any>) {\r\n        this._setOption('series', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single series or multiple series can be selected in the chart.\r\n    \r\n     */\r\n    @Input()\r\n    get seriesSelectionMode(): string {\r\n        return this._getOption('seriesSelectionMode');\r\n    }\r\n    set seriesSelectionMode(value: string) {\r\n        this._setOption('seriesSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines properties for the series template.\r\n    \r\n     */\r\n    @Input()\r\n    get seriesTemplate(): { customizeSeries?: Function, nameField?: string } {\r\n        return this._getOption('seriesTemplate');\r\n    }\r\n    set seriesTemplate(value: { customizeSeries?: Function, nameField?: string }) {\r\n        this._setOption('seriesTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the UI component&apos;s size in pixels.\r\n    \r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a point should remain in the hover state when the mouse pointer moves away.\r\n    \r\n     */\r\n    @Input()\r\n    get stickyHovering(): boolean {\r\n        return this._getOption('stickyHovering');\r\n    }\r\n    set stickyHovering(value: boolean) {\r\n        this._setOption('stickyHovering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Indicates whether or not to synchronize value axes when they are displayed on a single pane.\r\n    \r\n     */\r\n    @Input()\r\n    get synchronizeMultiAxes(): boolean {\r\n        return this._getOption('synchronizeMultiAxes');\r\n    }\r\n    set synchronizeMultiAxes(value: boolean) {\r\n        this._setOption('synchronizeMultiAxes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the UI component uses.\r\n    \r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the UI component&apos;s title.\r\n    \r\n     */\r\n    @Input()\r\n    get title(): string | { font?: Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string } {\r\n        return this._getOption('title');\r\n    }\r\n    set title(value: string | { font?: Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }) {\r\n        this._setOption('title', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures tooltips.\r\n    \r\n     */\r\n    @Input()\r\n    get tooltip(): { argumentFormat?: DevExpress.ui.Format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: DevExpress.ui.Format | string, interactive?: boolean, location?: string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { argumentFormat?: DevExpress.ui.Format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: DevExpress.ui.Format | string, interactive?: boolean, location?: string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the value axis.\r\n    \r\n     */\r\n    @Input()\r\n    get valueAxis(): Array<any | { allowDecimals?: boolean, autoBreaksEnabled?: boolean, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, customPosition?: Date | number | string, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: Font, format?: DevExpress.ui.Format | string, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, linearThreshold?: number, logarithmBase?: number, maxAutoBreakCount?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, multipleAxesSpacing?: number, name?: string, offset?: number, opacity?: number, pane?: string, placeholderSize?: number, position?: string, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, synchronizedValue?: number, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }> {\r\n        return this._getOption('valueAxis');\r\n    }\r\n    set valueAxis(value: Array<any | { allowDecimals?: boolean, autoBreaksEnabled?: boolean, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, customPosition?: Date | number | string, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: Font, format?: DevExpress.ui.Format | string, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, linearThreshold?: number, logarithmBase?: number, maxAutoBreakCount?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, multipleAxesSpacing?: number, name?: string, offset?: number, opacity?: number, pane?: string, placeholderSize?: number, position?: string, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, synchronizedValue?: number, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }>) {\r\n        this._setOption('valueAxis', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures zooming and panning.\r\n    \r\n     */\r\n    @Input()\r\n    get zoomAndPan(): { allowMouseWheel?: boolean, allowTouchGestures?: boolean, argumentAxis?: string, dragBoxStyle?: { color?: string, opacity?: number }, dragToZoom?: boolean, panKey?: string, valueAxis?: string } {\r\n        return this._getOption('zoomAndPan');\r\n    }\r\n    set zoomAndPan(value: { allowMouseWheel?: boolean, allowTouchGestures?: boolean, argumentAxis?: string, dragBoxStyle?: { color?: string, opacity?: number }, dragToZoom?: boolean, panKey?: string, valueAxis?: string }) {\r\n        this._setOption('zoomAndPan', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a label on the argument axis is clicked or tapped.\r\n    \r\n    \r\n     */\r\n    @Output() onArgumentAxisClick: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is disposed of.\r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when all series are ready.\r\n    \r\n    \r\n     */\r\n    @Output() onDone: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the UI component&apos;s rendering has finished.\r\n    \r\n    \r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after the UI component is exported.\r\n    \r\n    \r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is exported.\r\n    \r\n    \r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a file with exported UI component is saved to the user&apos;s local storage.\r\n    \r\n    \r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when an error or warning occurs.\r\n    \r\n    \r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function used in JavaScript frameworks to save the UI component instance.\r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a legend item is clicked or tapped.\r\n    \r\n    \r\n     */\r\n    @Output() onLegendClick: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after a UI component property is changed.\r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a series point is clicked or tapped.\r\n    \r\n    \r\n     */\r\n    @Output() onPointClick: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after the pointer enters or leaves a series point.\r\n    \r\n    \r\n     */\r\n    @Output() onPointHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a series point is selected or selection is canceled.\r\n    \r\n    \r\n     */\r\n    @Output() onPointSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a series is clicked or tapped.\r\n    \r\n    \r\n     */\r\n    @Output() onSeriesClick: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after the pointer enters or leaves a series.\r\n    \r\n    \r\n     */\r\n    @Output() onSeriesHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a series is selected or selection is canceled.\r\n    \r\n    \r\n     */\r\n    @Output() onSeriesSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a tooltip becomes hidden.\r\n    \r\n    \r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a tooltip appears.\r\n    \r\n    \r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when zooming or panning ends.\r\n    \r\n    \r\n     */\r\n    @Output() onZoomEnd: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when zooming or panning begins.\r\n    \r\n    \r\n     */\r\n    @Output() onZoomStart: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() adaptiveLayoutChange: EventEmitter<{ height?: number, keepLabels?: boolean, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() adjustOnZoomChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() animationChange: EventEmitter<boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() annotationsChange: EventEmitter<Array<DevExpress.viz.dxChartAnnotationConfig | any>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() argumentAxisChange: EventEmitter<{ aggregateByCategory?: boolean, aggregationGroupWidth?: number, aggregationInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, customPosition?: Date | number | string, customPositionAxis?: string, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, holidays?: Array<Date | string | number>, hoverMode?: string, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: Font, format?: DevExpress.ui.Format | string, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, linearThreshold?: number, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, offset?: number, opacity?: number, placeholderSize?: number, position?: string, singleWorkdays?: Array<Date | string | number>, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number, workdaysOnly?: boolean, workWeek?: Array<number> }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() autoHidePointMarkersChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() barGroupPaddingChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() barGroupWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() commonAnnotationSettingsChange: EventEmitter<dxChartCommonAnnotationConfig>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() commonAxisSettingsChange: EventEmitter<{ allowDecimals?: boolean, breakStyle?: { color?: string, line?: string, width?: number }, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, position?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, displayMode?: string, font?: Font, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minValueMargin?: number, opacity?: number, placeholderSize?: number, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, title?: { alignment?: string, font?: Font, margin?: number, textOverflow?: string, wordWrap?: string }, valueMarginsEnabled?: boolean, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() commonPaneSettingsChange: EventEmitter<{ backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number } }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() commonSeriesSettingsChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() containerBackgroundColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() crosshairChange: EventEmitter<{ color?: string, dashStyle?: string, enabled?: boolean, horizontalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, verticalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: Font, format?: DevExpress.ui.Format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() customizeAnnotationChange: EventEmitter<Function>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() customizeLabelChange: EventEmitter<Function>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() customizePointChange: EventEmitter<Function>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataPrepareSettingsChange: EventEmitter<{ checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | DevExpress.data.Store | string | Array<any>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() defaultPaneChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() exportChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string, svgToCanvas?: Function }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() legendChange: EventEmitter<{ backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, markerTemplate?: any, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, position?: string, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() loadingIndicatorChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, font?: Font, show?: boolean, text?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() maxBubbleSizeChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() minBubbleSizeChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() negativesAsZeroesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() paletteChange: EventEmitter<string | Array<string>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() paletteExtensionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() panesChange: EventEmitter<Array<any | { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number }, height?: number | string, name?: string }>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() pointSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() redrawOnResizeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() resizePanesOnZoomChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() resolveLabelOverlappingChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rotatedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() scrollBarChange: EventEmitter<{ color?: string, offset?: number, opacity?: number, position?: string, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() seriesChange: EventEmitter<any | Array<any>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() seriesSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() seriesTemplateChange: EventEmitter<{ customizeSeries?: Function, nameField?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() stickyHoveringChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() synchronizeMultiAxesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() titleChange: EventEmitter<string | { font?: Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ argumentFormat?: DevExpress.ui.Format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: string | UserDefinedElement, contentTemplate?: any, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: Font, format?: DevExpress.ui.Format | string, interactive?: boolean, location?: string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() valueAxisChange: EventEmitter<Array<any | { allowDecimals?: boolean, autoBreaksEnabled?: boolean, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, customPosition?: Date | number | string, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: Font, format?: DevExpress.ui.Format | string, indentFromAxis?: number, overlappingBehavior?: string, position?: string, rotationAngle?: number, staggeringSpacing?: number, template?: any, textOverflow?: string, visible?: boolean, wordWrap?: string }, linearThreshold?: number, logarithmBase?: number, maxAutoBreakCount?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, multipleAxesSpacing?: number, name?: string, offset?: number, opacity?: number, pane?: string, placeholderSize?: number, position?: string, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, synchronizedValue?: number, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() zoomAndPanChange: EventEmitter<{ allowMouseWheel?: boolean, allowTouchGestures?: boolean, argumentAxis?: string, dragBoxStyle?: { color?: string, opacity?: number }, dragToZoom?: boolean, panKey?: string, valueAxis?: string }>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiAnnotationComponent)\r\n    get annotationsChildren(): QueryList<DxiAnnotationComponent> {\r\n        return this._getOption('annotations');\r\n    }\r\n    set annotationsChildren(value) {\r\n        this.setChildren('annotations', value);\r\n    }\r\n\r\n    @ContentChildren(DxiPaneComponent)\r\n    get panesChildren(): QueryList<DxiPaneComponent> {\r\n        return this._getOption('panes');\r\n    }\r\n    set panesChildren(value) {\r\n        this.setChildren('panes', value);\r\n    }\r\n\r\n    @ContentChildren(DxiSeriesComponent)\r\n    get seriesChildren(): QueryList<DxiSeriesComponent> {\r\n        return this._getOption('series');\r\n    }\r\n    set seriesChildren(value) {\r\n        this.setChildren('series', value);\r\n    }\r\n\r\n    @ContentChildren(DxiValueAxisComponent)\r\n    get valueAxisChildren(): QueryList<DxiValueAxisComponent> {\r\n        return this._getOption('valueAxis');\r\n    }\r\n    set valueAxisChildren(value) {\r\n        this.setChildren('valueAxis', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'argumentAxisClick', emit: 'onArgumentAxisClick' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'done', emit: 'onDone' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'legendClick', emit: 'onLegendClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pointClick', emit: 'onPointClick' },\r\n            { subscribe: 'pointHoverChanged', emit: 'onPointHoverChanged' },\r\n            { subscribe: 'pointSelectionChanged', emit: 'onPointSelectionChanged' },\r\n            { subscribe: 'seriesClick', emit: 'onSeriesClick' },\r\n            { subscribe: 'seriesHoverChanged', emit: 'onSeriesHoverChanged' },\r\n            { subscribe: 'seriesSelectionChanged', emit: 'onSeriesSelectionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { subscribe: 'zoomEnd', emit: 'onZoomEnd' },\r\n            { subscribe: 'zoomStart', emit: 'onZoomStart' },\r\n            { emit: 'adaptiveLayoutChange' },\r\n            { emit: 'adjustOnZoomChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'annotationsChange' },\r\n            { emit: 'argumentAxisChange' },\r\n            { emit: 'autoHidePointMarkersChange' },\r\n            { emit: 'barGroupPaddingChange' },\r\n            { emit: 'barGroupWidthChange' },\r\n            { emit: 'commonAnnotationSettingsChange' },\r\n            { emit: 'commonAxisSettingsChange' },\r\n            { emit: 'commonPaneSettingsChange' },\r\n            { emit: 'commonSeriesSettingsChange' },\r\n            { emit: 'containerBackgroundColorChange' },\r\n            { emit: 'crosshairChange' },\r\n            { emit: 'customizeAnnotationChange' },\r\n            { emit: 'customizeLabelChange' },\r\n            { emit: 'customizePointChange' },\r\n            { emit: 'dataPrepareSettingsChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'defaultPaneChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'legendChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'maxBubbleSizeChange' },\r\n            { emit: 'minBubbleSizeChange' },\r\n            { emit: 'negativesAsZeroesChange' },\r\n            { emit: 'paletteChange' },\r\n            { emit: 'paletteExtensionModeChange' },\r\n            { emit: 'panesChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointSelectionModeChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'resizePanesOnZoomChange' },\r\n            { emit: 'resolveLabelOverlappingChange' },\r\n            { emit: 'rotatedChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollBarChange' },\r\n            { emit: 'seriesChange' },\r\n            { emit: 'seriesSelectionModeChange' },\r\n            { emit: 'seriesTemplateChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'stickyHoveringChange' },\r\n            { emit: 'synchronizeMultiAxesChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'valueAxisChange' },\r\n            { emit: 'zoomAndPanChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxChart(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('annotations', changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('palette', changes);\r\n        this.setupChanges('panes', changes);\r\n        this.setupChanges('series', changes);\r\n        this.setupChanges('valueAxis', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('annotations');\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('palette');\r\n        this._idh.doCheck('panes');\r\n        this._idh.doCheck('series');\r\n        this._idh.doCheck('valueAxis');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxiAnnotationModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoImageModule,\r\n    DxoShadowModule,\r\n    DxoArgumentAxisModule,\r\n    DxoAggregationIntervalModule,\r\n    DxiBreakModule,\r\n    DxoBreakStyleModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxoMinVisualRangeLengthModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoTitleModule,\r\n    DxoCommonAnnotationSettingsModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonPaneSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAggregationModule,\r\n    DxoAreaModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoHeightModule,\r\n    DxoUrlModule,\r\n    DxoWidthModule,\r\n    DxoSelectionStyleModule,\r\n    DxoReductionModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoBubbleModule,\r\n    DxoCandlestickModule,\r\n    DxoFullstackedareaModule,\r\n    DxoFullstackedbarModule,\r\n    DxoFullstackedlineModule,\r\n    DxoFullstackedsplineModule,\r\n    DxoFullstackedsplineareaModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoRangeareaModule,\r\n    DxoRangebarModule,\r\n    DxoScatterModule,\r\n    DxoSplineModule,\r\n    DxoSplineareaModule,\r\n    DxoStackedareaModule,\r\n    DxoStackedbarModule,\r\n    DxoStackedlineModule,\r\n    DxoStackedsplineModule,\r\n    DxoStackedsplineareaModule,\r\n    DxoStepareaModule,\r\n    DxoSteplineModule,\r\n    DxoStockModule,\r\n    DxoCrosshairModule,\r\n    DxoHorizontalLineModule,\r\n    DxoVerticalLineModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiPaneModule,\r\n    DxoScrollBarModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxiValueAxisModule,\r\n    DxoZoomAndPanModule,\r\n    DxoDragBoxStyleModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxChartComponent\r\n  ],\r\n  exports: [\r\n    DxChartComponent,\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxiAnnotationModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoImageModule,\r\n    DxoShadowModule,\r\n    DxoArgumentAxisModule,\r\n    DxoAggregationIntervalModule,\r\n    DxiBreakModule,\r\n    DxoBreakStyleModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxoMinVisualRangeLengthModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoTitleModule,\r\n    DxoCommonAnnotationSettingsModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonPaneSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAggregationModule,\r\n    DxoAreaModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoHeightModule,\r\n    DxoUrlModule,\r\n    DxoWidthModule,\r\n    DxoSelectionStyleModule,\r\n    DxoReductionModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoBubbleModule,\r\n    DxoCandlestickModule,\r\n    DxoFullstackedareaModule,\r\n    DxoFullstackedbarModule,\r\n    DxoFullstackedlineModule,\r\n    DxoFullstackedsplineModule,\r\n    DxoFullstackedsplineareaModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoRangeareaModule,\r\n    DxoRangebarModule,\r\n    DxoScatterModule,\r\n    DxoSplineModule,\r\n    DxoSplineareaModule,\r\n    DxoStackedareaModule,\r\n    DxoStackedbarModule,\r\n    DxoStackedlineModule,\r\n    DxoStackedsplineModule,\r\n    DxoStackedsplineareaModule,\r\n    DxoStepareaModule,\r\n    DxoSteplineModule,\r\n    DxoStockModule,\r\n    DxoCrosshairModule,\r\n    DxoHorizontalLineModule,\r\n    DxoVerticalLineModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiPaneModule,\r\n    DxoScrollBarModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxiValueAxisModule,\r\n    DxoZoomAndPanModule,\r\n    DxoDragBoxStyleModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxChartModule { }\r\n"]}