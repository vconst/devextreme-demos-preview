{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://devextreme-angular/ui/tree-view/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","DxTreeViewComponent","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","_this","_super","call","this","_createEventEmitters","subscribe","emit","setHost","paramIndex","decorator","__","constructor","prototype","create","tslib_1.__extends","_getOption","value","_setOption","setChildren","_createInstance","element","options","DxTreeView","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","name","isSetup","setupSingle","isChanged","getChanges","ElementRef","NgZone","DxTemplateHost","WatcherHelper","IterableDifferHelper","NestedOptionHost","TransferState","Inject","args","PLATFORM_ID","tslib_1.__decorate","Input","Function","Output","EventEmitter","ContentChildren","DxiItemComponent","QueryList","Component","selector","template","providers","tslib_1.__param","DxComponent","DxTreeViewModule","NgModule","imports","DxiItemModule","DxoSearchEditorOptionsModule","DxiButtonModule","DxoOptionsModule","DxIntegrationModule","DxTemplateModule","BrowserTransferStateModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!\n * devextreme-angular\n * Version: 21.2.1-alpha-21212-0323\n * Build date: Sat Jul 31 2021\n *\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport { Properties as dxTextBoxOptions } from 'devextreme/ui/text_box';\r\n\r\nimport DxTreeView from 'devextreme/ui/tree_view';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxiItemModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSearchEditorOptionsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiButtonModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoOptionsModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiItemComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n/**\r\n * The TreeView UI component is a tree-like representation of textual data.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-tree-view',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxTreeViewComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxTreeView;\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the UI component changes its state when interacting with a user.\r\n    \r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not to animate item collapsing and expanding.\r\n    \r\n     */\r\n    @Input()\r\n    get animationEnabled(): boolean {\r\n        return this._getOption('animationEnabled');\r\n    }\r\n    set animationEnabled(value: boolean) {\r\n        this._setOption('animationEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to load nodes on demand.\r\n    \r\n     */\r\n    @Input()\r\n    get createChildren(): Function {\r\n        return this._getOption('createChildren');\r\n    }\r\n    set createChildren(value: Function) {\r\n        this._setOption('createChildren', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the UI component to data.\r\n    \r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | DevExpress.data.Store | string | Array<DevExpress.ui.dxTreeViewItem> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | DevExpress.data.Store | string | Array<DevExpress.ui.dxTreeViewItem>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the UI component of the used data structure.\r\n    \r\n     */\r\n    @Input()\r\n    get dataStructure(): string {\r\n        return this._getOption('dataStructure');\r\n    }\r\n    set dataStructure(value: string) {\r\n        this._setOption('dataStructure', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source item field whose value defines whether or not the corresponding UI component item is disabled.\r\n    \r\n     */\r\n    @Input()\r\n    get disabledExpr(): Function | string {\r\n        return this._getOption('disabledExpr');\r\n    }\r\n    set disabledExpr(value: Function | string) {\r\n        this._setOption('disabledExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the data field whose values should be displayed.\r\n    \r\n     */\r\n    @Input()\r\n    get displayExpr(): Function | string {\r\n        return this._getOption('displayExpr');\r\n    }\r\n    set displayExpr(value: Function | string) {\r\n        this._setOption('displayExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not a user can expand all tree view items by the &apos;*&apos; hot key.\r\n    \r\n     */\r\n    @Input()\r\n    get expandAllEnabled(): boolean {\r\n        return this._getOption('expandAllEnabled');\r\n    }\r\n    set expandAllEnabled(value: boolean) {\r\n        this._setOption('expandAllEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which data source field specifies whether an item is expanded.\r\n    \r\n     */\r\n    @Input()\r\n    get expandedExpr(): Function | string {\r\n        return this._getOption('expandedExpr');\r\n    }\r\n    set expandedExpr(value: Function | string) {\r\n        this._setOption('expandedExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the event on which to expand/collapse a node.\r\n    \r\n     */\r\n    @Input()\r\n    get expandEvent(): string {\r\n        return this._getOption('expandEvent');\r\n    }\r\n    set expandEvent(value: string) {\r\n        this._setOption('expandEvent', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not all parent nodes of an initially expanded node are displayed expanded.\r\n    \r\n     */\r\n    @Input()\r\n    get expandNodesRecursive(): boolean {\r\n        return this._getOption('expandNodesRecursive');\r\n    }\r\n    set expandNodesRecursive(value: boolean) {\r\n        this._setOption('expandNodesRecursive', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component can be focused using keyboard navigation.\r\n    \r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source item field whose value defines whether or not the corresponding node includes child nodes.\r\n    \r\n     */\r\n    @Input()\r\n    get hasItemsExpr(): Function | string {\r\n        return this._getOption('hasItemsExpr');\r\n    }\r\n    set hasItemsExpr(value: Function | string) {\r\n        this._setOption('hasItemsExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The time period in milliseconds before the onItemHold event is raised.\r\n    \r\n     */\r\n    @Input()\r\n    get itemHoldTimeout(): number {\r\n        return this._getOption('itemHoldTimeout');\r\n    }\r\n    set itemHoldTimeout(value: number) {\r\n        this._setOption('itemHoldTimeout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An array of items displayed by the UI component.\r\n    \r\n     */\r\n    @Input()\r\n    get items(): Array<DevExpress.ui.dxTreeViewItem> {\r\n        return this._getOption('items');\r\n    }\r\n    set items(value: Array<DevExpress.ui.dxTreeViewItem>) {\r\n        this._setOption('items', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which data field contains nested items.\r\n    \r\n     */\r\n    @Input()\r\n    get itemsExpr(): Function | string {\r\n        return this._getOption('itemsExpr');\r\n    }\r\n    set itemsExpr(value: Function | string) {\r\n        this._setOption('itemsExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a custom template for items.\r\n    \r\n     */\r\n    @Input()\r\n    get itemTemplate(): any {\r\n        return this._getOption('itemTemplate');\r\n    }\r\n    set itemTemplate(value: any) {\r\n        this._setOption('itemTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which data field provides keys for TreeView items.\r\n    \r\n     */\r\n    @Input()\r\n    get keyExpr(): Function | string {\r\n        return this._getOption('keyExpr');\r\n    }\r\n    set keyExpr(value: Function | string) {\r\n        this._setOption('keyExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the text or HTML markup displayed by the UI component if the item collection is empty.\r\n    \r\n     */\r\n    @Input()\r\n    get noDataText(): string {\r\n        return this._getOption('noDataText');\r\n    }\r\n    set noDataText(value: string) {\r\n        this._setOption('noDataText', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source item field for holding the parent key of the corresponding node.\r\n    \r\n     */\r\n    @Input()\r\n    get parentIdExpr(): Function | string {\r\n        return this._getOption('parentIdExpr');\r\n    }\r\n    set parentIdExpr(value: Function | string) {\r\n        this._setOption('parentIdExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the parent ID value of the root item.\r\n    \r\n     */\r\n    @Input()\r\n    get rootValue(): any {\r\n        return this._getOption('rootValue');\r\n    }\r\n    set rootValue(value: any) {\r\n        this._setOption('rootValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A string value specifying available scrolling directions.\r\n    \r\n     */\r\n    @Input()\r\n    get scrollDirection(): string {\r\n        return this._getOption('scrollDirection');\r\n    }\r\n    set scrollDirection(value: string) {\r\n        this._setOption('scrollDirection', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the search panel.\r\n    \r\n     */\r\n    @Input()\r\n    get searchEditorOptions(): dxTextBoxOptions {\r\n        return this._getOption('searchEditorOptions');\r\n    }\r\n    set searchEditorOptions(value: dxTextBoxOptions) {\r\n        this._setOption('searchEditorOptions', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the search panel is visible.\r\n    \r\n     */\r\n    @Input()\r\n    get searchEnabled(): boolean {\r\n        return this._getOption('searchEnabled');\r\n    }\r\n    set searchEnabled(value: boolean) {\r\n        this._setOption('searchEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a data object&apos;s field name or an expression whose value is compared to the search string.\r\n    \r\n     */\r\n    @Input()\r\n    get searchExpr(): Function | string | Array<Function | string> {\r\n        return this._getOption('searchExpr');\r\n    }\r\n    set searchExpr(value: Function | string | Array<Function | string>) {\r\n        this._setOption('searchExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a comparison operation used to search UI component items.\r\n    \r\n     */\r\n    @Input()\r\n    get searchMode(): string {\r\n        return this._getOption('searchMode');\r\n    }\r\n    set searchMode(value: string) {\r\n        this._setOption('searchMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a delay in milliseconds between when a user finishes typing, and the search is executed.\r\n    \r\n     */\r\n    @Input()\r\n    get searchTimeout(): number {\r\n        return this._getOption('searchTimeout');\r\n    }\r\n    set searchTimeout(value: number) {\r\n        this._setOption('searchTimeout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the current search string.\r\n    \r\n     */\r\n    @Input()\r\n    get searchValue(): string {\r\n        return this._getOption('searchValue');\r\n    }\r\n    set searchValue(value: string) {\r\n        this._setOption('searchValue', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the text displayed at the &apos;Select All&apos; check box.\r\n    \r\n     */\r\n    @Input()\r\n    get selectAllText(): string {\r\n        return this._getOption('selectAllText');\r\n    }\r\n    set selectAllText(value: string) {\r\n        this._setOption('selectAllText', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether an item becomes selected if a user clicks it.\r\n    \r\n     */\r\n    @Input()\r\n    get selectByClick(): boolean {\r\n        return this._getOption('selectByClick');\r\n    }\r\n    set selectByClick(value: boolean) {\r\n        this._setOption('selectByClick', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the name of the data source item field whose value defines whether or not the corresponding UI component items is selected.\r\n    \r\n     */\r\n    @Input()\r\n    get selectedExpr(): Function | string {\r\n        return this._getOption('selectedExpr');\r\n    }\r\n    set selectedExpr(value: Function | string) {\r\n        this._setOption('selectedExpr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies item selection mode. Applies only if selection is enabled.\r\n    \r\n     */\r\n    @Input()\r\n    get selectionMode(): string {\r\n        return this._getOption('selectionMode');\r\n    }\r\n    set selectionMode(value: string) {\r\n        this._setOption('selectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether all child nodes should be selected when their parent node is selected. Applies only if the selectionMode is &apos;multiple&apos;.\r\n    \r\n     */\r\n    @Input()\r\n    get selectNodesRecursive(): boolean {\r\n        return this._getOption('selectNodesRecursive');\r\n    }\r\n    set selectNodesRecursive(value: boolean) {\r\n        this._setOption('selectNodesRecursive', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the checkbox display mode.\r\n    \r\n     */\r\n    @Input()\r\n    get showCheckBoxesMode(): string {\r\n        return this._getOption('showCheckBoxesMode');\r\n    }\r\n    set showCheckBoxesMode(value: string) {\r\n        this._setOption('showCheckBoxesMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n    \r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Enables the virtual mode in which nodes are loaded on demand. Use it to enhance the performance on large datasets.\r\n    \r\n     */\r\n    @Input()\r\n    get virtualModeEnabled(): boolean {\r\n        return this._getOption('virtualModeEnabled');\r\n    }\r\n    set virtualModeEnabled(value: boolean) {\r\n        this._setOption('virtualModeEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component is visible.\r\n    \r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the UI component&apos;s content is ready and each time the content is changed.\r\n    \r\n    \r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is disposed of.\r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function used in JavaScript frameworks to save the UI component instance.\r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a collection item is clicked or tapped.\r\n    \r\n    \r\n     */\r\n    @Output() onItemClick: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a tree view item is collapsed.\r\n    \r\n    \r\n     */\r\n    @Output() onItemCollapsed: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a collection item is right-clicked or pressed.\r\n    \r\n    \r\n     */\r\n    @Output() onItemContextMenu: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a tree view item is expanded.\r\n    \r\n    \r\n     */\r\n    @Output() onItemExpanded: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a collection item has been held for a specified period.\r\n    \r\n    \r\n     */\r\n    @Output() onItemHold: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after a collection item is rendered.\r\n    \r\n    \r\n     */\r\n    @Output() onItemRendered: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a single TreeView item is selected or selection is canceled.\r\n    \r\n    \r\n     */\r\n    @Output() onItemSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after a UI component property is changed.\r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the &apos;Select All&apos; check box value is changed. Applies only if showCheckBoxesMode is &apos;selectAll&apos; and selectionMode is &apos;multiple&apos;.\r\n    \r\n    \r\n     */\r\n    @Output() onSelectAllValueChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a TreeView item is selected or selection is canceled.\r\n    \r\n    \r\n     */\r\n    @Output() onSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() animationEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() createChildrenChange: EventEmitter<Function>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | DevExpress.data.Store | string | Array<DevExpress.ui.dxTreeViewItem>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() dataStructureChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() displayExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() expandAllEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() expandedExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() expandEventChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() expandNodesRecursiveChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hasItemsExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() itemHoldTimeoutChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() itemsChange: EventEmitter<Array<DevExpress.ui.dxTreeViewItem>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() itemsExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() itemTemplateChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() keyExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() noDataTextChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() parentIdExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rootValueChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() scrollDirectionChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() searchEditorOptionsChange: EventEmitter<dxTextBoxOptions>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() searchEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() searchExprChange: EventEmitter<Function | string | Array<Function | string>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() searchModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() searchTimeoutChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() searchValueChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() selectAllTextChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() selectByClickChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() selectedExprChange: EventEmitter<Function | string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() selectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() selectNodesRecursiveChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() showCheckBoxesModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() virtualModeEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiItemComponent)\r\n    get itemsChildren(): QueryList<DxiItemComponent> {\r\n        return this._getOption('items');\r\n    }\r\n    set itemsChildren(value) {\r\n        this.setChildren('items', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemClick', emit: 'onItemClick' },\r\n            { subscribe: 'itemCollapsed', emit: 'onItemCollapsed' },\r\n            { subscribe: 'itemContextMenu', emit: 'onItemContextMenu' },\r\n            { subscribe: 'itemExpanded', emit: 'onItemExpanded' },\r\n            { subscribe: 'itemHold', emit: 'onItemHold' },\r\n            { subscribe: 'itemRendered', emit: 'onItemRendered' },\r\n            { subscribe: 'itemSelectionChanged', emit: 'onItemSelectionChanged' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectAllValueChanged', emit: 'onSelectAllValueChanged' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'animationEnabledChange' },\r\n            { emit: 'createChildrenChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'dataStructureChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'disabledExprChange' },\r\n            { emit: 'displayExprChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'expandAllEnabledChange' },\r\n            { emit: 'expandedExprChange' },\r\n            { emit: 'expandEventChange' },\r\n            { emit: 'expandNodesRecursiveChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'hasItemsExprChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemHoldTimeoutChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'itemsExprChange' },\r\n            { emit: 'itemTemplateChange' },\r\n            { emit: 'keyExprChange' },\r\n            { emit: 'noDataTextChange' },\r\n            { emit: 'parentIdExprChange' },\r\n            { emit: 'rootValueChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollDirectionChange' },\r\n            { emit: 'searchEditorOptionsChange' },\r\n            { emit: 'searchEnabledChange' },\r\n            { emit: 'searchExprChange' },\r\n            { emit: 'searchModeChange' },\r\n            { emit: 'searchTimeoutChange' },\r\n            { emit: 'searchValueChange' },\r\n            { emit: 'selectAllTextChange' },\r\n            { emit: 'selectByClickChange' },\r\n            { emit: 'selectedExprChange' },\r\n            { emit: 'selectionModeChange' },\r\n            { emit: 'selectNodesRecursiveChange' },\r\n            { emit: 'showCheckBoxesModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'virtualModeEnabledChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxTreeView(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('items', changes);\r\n        this.setupChanges('searchExpr', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('items');\r\n        this._idh.doCheck('searchExpr');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxiItemModule,\r\n    DxoSearchEditorOptionsModule,\r\n    DxiButtonModule,\r\n    DxoOptionsModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxTreeViewComponent\r\n  ],\r\n  exports: [\r\n    DxTreeViewComponent,\r\n    DxiItemModule,\r\n    DxoSearchEditorOptionsModule,\r\n    DxiButtonModule,\r\n    DxoOptionsModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxTreeViewModule { }\r\n"]}