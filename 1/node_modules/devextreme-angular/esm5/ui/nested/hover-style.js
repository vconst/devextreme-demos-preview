/*!
 * devextreme-angular
 * Version: 21.2.1-alpha-21212-0323
 * Build date: Sat Jul 31 2021
 *
 * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
var DxoHoverStyleComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoHoverStyleComponent, _super);
    function DxoHoverStyleComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoHoverStyleComponent.prototype, "border", {
        get: function () {
            return this._getOption('border');
        },
        set: function (value) {
            this._setOption('border', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "hatching", {
        get: function () {
            return this._getOption('hatching');
        },
        set: function (value) {
            this._setOption('hatching', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "size", {
        get: function () {
            return this._getOption('size');
        },
        set: function (value) {
            this._setOption('size', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoHoverStyleComponent.prototype, "_optionPath", {
        get: function () {
            return 'hoverStyle';
        },
        enumerable: true,
        configurable: true
    });
    DxoHoverStyleComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoHoverStyleComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoHoverStyleComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoHoverStyleComponent.prototype, "border", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoHoverStyleComponent.prototype, "color", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoHoverStyleComponent.prototype, "dashStyle", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoHoverStyleComponent.prototype, "hatching", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxoHoverStyleComponent.prototype, "width", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxoHoverStyleComponent.prototype, "size", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxoHoverStyleComponent.prototype, "opacity", null);
    DxoHoverStyleComponent = tslib_1.__decorate([
        Component({
            selector: 'dxo-hover-style',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoHoverStyleComponent);
    return DxoHoverStyleComponent;
}(NestedOption));
export { DxoHoverStyleComponent };
var DxoHoverStyleModule = /** @class */ (function () {
    function DxoHoverStyleModule() {
    }
    DxoHoverStyleModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                DxoHoverStyleComponent
            ],
            exports: [
                DxoHoverStyleComponent
            ],
        })
    ], DxoHoverStyleModule);
    return DxoHoverStyleModule;
}());
export { DxoHoverStyleModule };
//# sourceMappingURL=data:application/json;base64,