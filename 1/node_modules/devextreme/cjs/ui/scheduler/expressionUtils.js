/**
 * DevExtreme (cjs/ui/scheduler/expressionUtils.js)
 * Version: 21.2.0 (build 21212-0323)
 * Build date: Sat Jul 31 2021
 *
 * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
 * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
 */
"use strict";
exports.ExpressionUtils = void 0;
var _type = require("../../core/utils/type");
var _instanceFactory = require("./instanceFactory");
var ExpressionUtils = {
    getField: function(key, field, obj) {
        var dataAccessors = (0, _instanceFactory.getAppointmentDataProvider)(key).getDataAccessors();
        if ((0, _type.isDefined)(dataAccessors.getter[field])) {
            return dataAccessors.getter[field](obj)
        }
    },
    setField: function(key, field, obj, value) {
        var _getAppointmentDataPr = (0, _instanceFactory.getAppointmentDataProvider)(key),
            dataAccessors = _getAppointmentDataPr.dataAccessors;
        var _getModelProvider = (0, _instanceFactory.getModelProvider)(key),
            model = _getModelProvider.model;
        if (!(0, _type.isDefined)(dataAccessors.setter[field])) {
            return
        }
        var fieldExpression = model["".concat(field, "Expr")];
        var splitExprStr = fieldExpression.split(".");
        var rootField = splitExprStr[0];
        if (void 0 === obj[rootField] && splitExprStr.length > 1) {
            var emptyChain = function(arr) {
                var result = {};
                var tmp = result;
                var arrLength = arr.length - 1;
                for (var i = 1; i < arrLength; i++) {
                    tmp = tmp[arr[i]] = {}
                }
                return result
            }(splitExprStr);
            obj[rootField] = emptyChain
        }
        dataAccessors.setter[field](obj, value);
        return obj
    }
};
exports.ExpressionUtils = ExpressionUtils;
